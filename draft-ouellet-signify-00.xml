<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt"?>

<?rfc strict="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="3"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc category="std" docName="draft-ouellet-signify-00" ipr="trust200902">

 <front>
   <title>Signify Digital Signature Format</title>

   <author fullname="Jean-Philippe Ouellet" initials="J-P." surname="Ouellet">
     <organization>Independent</organization>
     <address>
       <postal>
         <street><!-- Intentionally blank for privacy. --></street>
         <city>Blacksburg</city>
         <region>VA</region>
         <code>24060</code>
         <country></country>
       </postal>
       <phone><!-- Intentionally blank. --></phone>
       <email>jpo@vt.edu</email>
       <!--<uri>http://jpo.me/</uri>-->
     </address>
   </author>

   <date year="2016" month="April" day="25 " />

   <area>General</area>
   <workgroup>Internet Engineering Task Force</workgroup>
   <keyword>signify</keyword>

   <abstract>
     <t>This document specifies the Signify format, designed initially for use in OpenBSD's minimalist digital signature utility by the same name.</t>
   </abstract>
 </front>

 <middle>
   <section title="Introduction">
     <t>The Signify format was originally created for the <xref target="SIGNIFY">signify utility</xref> in OpenBSD to provide integrity and authenticity guarantees for messages and files.
        The primary goal of the format is simplicity, such that an implementation of a signify-signature verification program could be as small as possible.
        This is unlike the OpenPGP format specified in <xref target="RFC4880">RFC 4880</xref> which tries to be general and extensible at the cost of complexity and corresponding attack surface of conforming implementations.</t>

     <t>The format is inspired by the API of <xref target="NACL"></xref>, a library implementing all of the cryptographic primitives used herein.</t>

     <section title="Requirements Language">
       <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
          "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
          document are to be interpreted as described in <xref
       target="RFC2119">RFC 2119</xref>.</t>
     </section>
   </section>

   <section title="Data Formats">
     <t>There are three types of data formats: secret keys, public keys, and signatures.
        The following sections describe their respective uses, structures, and fields. Each data format MUST have all fields.</t>

     <t>The binary structures SHOULD be stored in base64-encoded form according to <xref target="RFC4648">RFC 4648</xref>.</t>

     <section title="Secret Keys">

       <t>Signify secret (signing) keys are 104-byte structures which SHALL be encoded according to the format specified by the following packet-header style diagram (with each horizontal notch representing a single bit of the data):</t>

<figure><artwork><![CDATA[
                        1                   2                   3   
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |             pkalg             |             kdfalg            |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                           kdfrounds                           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   ~                              salt                             ~
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                            checksum                           |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             keynum                            |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   ~                             seckey                            ~
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

       <t>The fields are defined as follows:<list style="hanging">
         <t hangText="pkalg (2 bytes)"><vspace />
         </t>
         <t hangText="kdfalg (2 bytes)"><vspace />
         </t>
         <t hangText="kdfrounds (4 bytes)"><vspace />
         </t>
         <t hangText="salt (16 bytes)"><vspace />
         </t>
         <t hangText="checksum (8 bytes)"><vspace />
         </t>
         <t hangText="keynum (8 bytes)"><vspace />
         </t>
         <t hangText="seckey (64 bytes)"><vspace />
           is a blah <xref target="I-D.josefsson-eddsa-ed25519">Ed25519</xref>
         </t>
       </list></t>

     </section>
     <section title="Public Keys">

       <t>Signify public (verification) keys are 42-byte structures which SHALL be encoded as follows:</t>

<figure><artwork><![CDATA[
                        1                   2                   3   
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |             pkalg             |                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |
   |                             keynum                            |
   |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                               |                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |
   |                                                               |
   ~                             pubkey                            ~
   |                                                               |
   |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                               |                                
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                                
]]></artwork></figure>

       <t>The fields are defined as follows:<list style="hanging">
         <t hangText="pkalg (2 bytes)"><vspace />
         </t>
         <t hangText="keynum (8 bytes)"><vspace />
         </t>
         <t hangText="pubkey (32 bytes)"><vspace />
         </t>
       </list></t>

     </section>
     <section title="Signatures">

       <t>Signify signatures are 74-byte structures which SHALL be encoded as follows:</t>

<figure><artwork><![CDATA[
                        1                   2                   3   
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |             pkalg             |                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |
   |                             keynum                            |
   |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                               |                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |
   |                                                               |
   ~                              sig                              ~
   |                                                               |
   |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                               |                                
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                                
]]></artwork></figure>

       <t>The fields are defined as follows:<list style="hanging">
         <t hangText="pkalg (2 bytes)"><vspace />
         </t>
         <t hangText="keynum (8 bytes)"><vspace />
         </t>
         <t hangText="sig (64 bytes)"><vspace />
           is a blah <xref target="I-D.josefsson-eddsa-ed25519">Ed25519</xref>
         </t>
       </list></t>

       <t>It is common to make signatures of hashes of documents instead of the documents themselves.
          The original implementation's most common use case was signing lists of <xref target="RFC6234">SHA-256</xref> hashes of files.</t>

     </section>
   </section>

   <section anchor="Acknowledgements" title="Acknowledgements">
     <t>This format was devised by Ted Unangst when writing the <xref target="SIGNIFY">signify utility</xref> for OpenBSD 5.5.</t>

     <t>The author would like to thank Paul Heilker for motivating him to finally produce this document.</t>
   </section>

   <section anchor="IANA" title="IANA Considerations">
     <t>This memo includes no request to IANA.</t>
   </section>

   <section anchor="Security" title="Security Considerations">
     <t>XXX TODO.</t>
   </section>
 </middle>

 <back>
   <references title="Normative References">
     <!-- Key words for use in RFCs to Indicate Requirement Levels -->
     <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?>

     <!-- The Base16, Base32, and Base64 Data Encodings -->
     <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4648.xml"?>

     <!-- US Secure Hash Algorithms (SHA and SHA-based HMAC and HKDF) -->
     <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6234.xml"?>

     <!-- EdDSA and Ed25519 -->
     <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.josefsson-eddsa-ed25519.xml"?>
   </references>

   <references title="Informative References">
     <!--  OpenPGP Message Format -->
     <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4880.xml"?>

     <reference anchor="SIGNIFY" target="http://man.openbsd.org/OpenBSD-current/man1/signify.1">
       <front>
         <title>signify(1) &mdash; cryptographically sign and verify files</title>
         <author initials="T." surname="Unangst" fullname="Ted Unangst">
           <organization>OpenBSD</organization>
         </author>
         <date year="2014" />
       </front>
       <seriesInfo name="" value="" />
     </reference>

     <reference anchor="NACL" target="https://nacl.cr.yp.to/">
       <front>
         <title>NaCl: Networking and Cryptography library</title>
         <author initials="D. J." surname="Bernstein" fullname="Daniel J. Bernstein" />
         <author initials="T." surname="Lange" fullname="Tanja Lange" />
         <author initials="P." surname="Schwabe" fullname="Peter Schwabe" />
         <date year="2008" />
       </front>
     </reference>
   </references>

   <section title="Structures in C">
     <t>Below is an example of how the structures defined in this document may be represented in C code.</t>

<figure><artwork><![CDATA[
/* Code begins. */
struct enckey {
        uint8_t  pkalg[2];
        uint8_t  kdfalg[2];
        uint32_t kdfrounds;
        uint8_t  salt[16];
        uint8_t  checksum[8];
        uint8_t  keynum[8];
        uint8_t  seckey[64];
};

struct pubkey {
        uint8_t  pkalg[2];
        uint8_t  keynum[8];
        uint8_t  pubkey[32];
};

struct sig {
        uint8_t  pkalg[2];
        uint8_t  keynum[8];
        uint8_t  sig[64];
};
/* Code ends. */
]]></artwork></figure>
   </section>
 </back>
</rfc>

